using BinaryProvider # requires BinaryProvider 0.3.0 or later

# Parse some basic command-line arguments
const verbose = "--verbose" in ARGS
const prefix = Prefix(get([a for a in ARGS if a != "--verbose"], 1, joinpath(@__DIR__, "usr")))
products = [
    LibraryProduct(prefix, ["libspatialindex_c"], :libspatialindex_c),
    LibraryProduct(prefix, ["libspatialindex"], :libspatialindex),
]

# Download binaries from hosted location
bin_prefix = "https://github.com/MaximeBouton/LibSpatialIndexBuilder/releases/download/v1.8.5"

# Listing of files generated by BinaryBuilder:
download_info = Dict(
    Linux(:aarch64, libc=:glibc) => ("$bin_prefix/LibSpatialIndexBuilder.v1.8.5.aarch64-linux-gnu.tar.gz", "9c26aa9fc55e065cbc8d4ef7ce6bb5210dad383cf8162e55d4b09149c86f3e22"),
    Linux(:aarch64, libc=:musl) => ("$bin_prefix/LibSpatialIndexBuilder.v1.8.5.aarch64-linux-musl.tar.gz", "50e4b61620b0b23c9da541e1cb2505261f9965384f071521242c31f425b35d4b"),
    Linux(:armv7l, libc=:glibc, call_abi=:eabihf) => ("$bin_prefix/LibSpatialIndexBuilder.v1.8.5.arm-linux-gnueabihf.tar.gz", "4320e2191f7dd52e7da9ba22fbec3962412e6f655798f72f2cf2fa9701c6c2f1"),
    Linux(:armv7l, libc=:musl, call_abi=:eabihf) => ("$bin_prefix/LibSpatialIndexBuilder.v1.8.5.arm-linux-musleabihf.tar.gz", "7b10fed4433d34fd79a1083341594e07592ccb20b23a3991e1877e5b1105b304"),
    Linux(:i686, libc=:glibc) => ("$bin_prefix/LibSpatialIndexBuilder.v1.8.5.i686-linux-gnu.tar.gz", "83ee51d110047dcea511c8eedf42430ce99094cb310dcb8b616dd952b90e838f"),
    Linux(:i686, libc=:musl) => ("$bin_prefix/LibSpatialIndexBuilder.v1.8.5.i686-linux-musl.tar.gz", "e5aeca47bf2b0fd253faeee212f69e0cf174273eacd2e95b9c45a8a1b0962d2f"),
    Linux(:powerpc64le, libc=:glibc) => ("$bin_prefix/LibSpatialIndexBuilder.v1.8.5.powerpc64le-linux-gnu.tar.gz", "4c5766af02db1028d08e87d8c19799b8d336cad247177083b4de1eee6ada24b9"),
    Linux(:x86_64, libc=:glibc) => ("$bin_prefix/LibSpatialIndexBuilder.v1.8.5.x86_64-linux-gnu.tar.gz", "334dace9eabf6717d95befd3f781eb1492397c306ad424f5fdeaa75a559719e6"),
    Linux(:x86_64, libc=:musl) => ("$bin_prefix/LibSpatialIndexBuilder.v1.8.5.x86_64-linux-musl.tar.gz", "4e392c2b391aa10eedb7e1e0034582f6cca0474fd9833a2966b860c99bfe6be0"),
    FreeBSD(:x86_64) => ("$bin_prefix/LibSpatialIndexBuilder.v1.8.5.x86_64-unknown-freebsd11.1.tar.gz", "f7cab3a4f00dfefd5d6f55b4d390bcd37f46bfe5f030c23e92398f96fcdb58c6"),
)

# Install unsatisfied or updated dependencies:
unsatisfied = any(!satisfied(p; verbose=verbose) for p in products)
dl_info = choose_download(download_info, platform_key_abi())
if dl_info === nothing && unsatisfied
    # If we don't have a compatible .tar.gz to download, complain.
    # Alternatively, you could attempt to install from a separate provider,
    # build from source or something even more ambitious here.
    error("Your platform (\"$(Sys.MACHINE)\", parsed as \"$(triplet(platform_key_abi()))\") is not supported by this package!")
end

# If we have a download, and we are unsatisfied (or the version we're
# trying to install is not itself installed) then load it up!
if unsatisfied || !isinstalled(dl_info...; prefix=prefix)
    # Download and install binaries
    install(dl_info...; prefix=prefix, force=true, verbose=verbose)
end

# Write out a deps.jl file that will contain mappings for our products
write_deps_file(joinpath(@__DIR__, "deps.jl"), products, verbose=verbose)